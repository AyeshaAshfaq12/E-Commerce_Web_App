var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.723,1,0.969]],["body/components/AppComponent.html",[0,0.771,1,1.18,2,1.285,3,0.332,4,0.281,5,0.947,6,0.947,7,0.947,8,0.947,9,0.281,10,1.135,11,0.947,12,2.346,13,1.998,14,1.106,15,1.51,16,2.826,17,1.51,18,2.266,19,0.388,20,0.83,21,4.214,22,2.826,23,2.826,24,2.826,25,0.83,26,2.575,27,2.148,28,3.753,29,0.957,30,1.421,31,4.088,32,3.937,33,2.623,34,1.922,35,1.488,36,1.497,37,2.266,38,0.52,39,0.057,40,0.771,41,0.88,42,0.52,43,1.421,44,1.034,45,1.194,46,1.421,47,1.421,48,1.81,49,3.753,50,1.362,51,1.362,52,1.285,53,1.81,54,1.421,55,1.829,56,1.421,57,2.266,58,2.266,59,1.421,60,0.877,61,0.281,62,1.421,63,1.285,64,1.135,65,0.806,66,1.421,67,0.947,68,1.421,69,0.332,70,0.332,71,1.574,72,1.421,73,1.421,74,1.421,75,1.421,76,1.421,77,3.224,78,1.421,79,2.266,80,1.421,81,2.826,82,2.451,83,2.826,84,0.694,85,1.421,86,1.421,87,1.421,88,1.421,89,1.421,90,3.522,91,3.522,92,2.826,93,1.421,94,1.421,95,1.421,96,0.947,97,1.421,98,1.421,99,1.421,100,1.421,101,1.421,102,1.421,103,2.266,104,2.266,105,2.266,106,2.266,107,2.266,108,0.694,109,1.51,110,1.51,111,0.947,112,2.148,113,0.947,114,0.947,115,0.45,116,0.947,117,0.45,118,0.806,119,0.947,120,0.947,121,0.024,122,0.024]],["title/modules/AppModule.html",[123,1.502,124,1.502]],["body/modules/AppModule.html",[1,1.829,3,0.54,4,0.457,9,0.457,13,1.311,27,1.539,39,0.057,60,1.156,61,0.457,63,1.311,67,1.539,69,0.54,70,0.54,82,1.311,108,1.128,115,1.431,117,1.431,121,0.034,122,0.034,123,1.311,124,2.857,125,1.128,126,1.311,127,3.03,128,2.527,129,2.611,130,1.539,131,1.846,132,1.846,133,1.846,134,1.846,135,2.206,136,2.611,137,2.311,138,2.611,139,2.611,140,2.611,141,1.539,142,1.311,143,2.311,144,2.311,145,1.846,146,3.269,147,3.269,148,1.539,149,3.269,150,1.539,151,1.846,152,1.854,153,2.311,154,3.793,155,2.611,156,2.311,157,1.539,158,1.539,159,2.311,160,2.311,161,1.539,162,2.311]],["title/modules/AppRoutingModule.html",[123,1.502,135,1.293]],["body/modules/AppRoutingModule.html",[0,1.053,3,0.688,4,0.582,9,0.582,39,0.057,60,1.157,61,0.582,65,1.67,69,0.688,70,0.688,115,1.222,117,1.222,118,2.188,121,0.041,122,0.041,125,1.438,130,1.962,135,1.883,138,2.352,139,3.08,140,2.352,141,1.962,142,1.67,145,2.352,151,2.352,163,2.945,164,2.945,165,3.856,166,2.439,167,1.962,168,2.945,169,1.962,170,2.945,171,1.244,172,4.3,173,2.945,174,1.962,175,2.945,176,2.945,177,2.945]],["title/injectables/AppService.html",[34,1.293,178,0.618]],["body/injectables/AppService.html",[3,0.664,4,0.562,9,0.562,14,1.387,19,0.776,20,1.379,25,1.379,29,1.785,34,1.839,36,1.647,38,1.04,39,0.056,40,0.776,41,0.776,42,1.04,44,1.379,45,1.2,50,1.2,51,1.2,60,0.88,61,0.562,69,0.664,70,0.664,71,2.063,96,2.998,121,0.04,122,0.04,178,0.88,179,1.387,180,2.269,181,3.594,182,3.008,183,3.766,184,2.841,185,2.397,186,3.008,187,2.063,188,2.841,189,1.379,190,3.375,191,1.387,192,1.612,193,2.269,194,2.269,195,1.04,196,2.269]],["title/injectables/AppServiceService.html",[178,0.618,197,1.764]],["body/injectables/AppServiceService.html",[3,0.652,4,0.552,9,0.552,14,1.363,19,0.762,20,1.363,25,1.363,29,1.769,36,1.636,38,1.022,39,0.056,40,0.762,41,0.762,42,1.022,44,1.363,45,1.179,50,1.179,51,1.179,60,0.87,61,0.552,69,0.652,70,0.652,71,2.045,96,2.977,121,0.039,122,0.039,178,0.87,179,1.363,181,3.569,182,2.974,185,2.376,186,2.974,187,2.045,189,1.363,190,3.346,191,1.363,192,1.584,193,2.23,194,2.23,195,1.022,196,2.23,197,2.48,198,3.718,199,2.23,200,3.723,201,2.791,202,2.791]],["title/injectables/AuthService.html",[35,1.118,178,0.618]],["body/injectables/AuthService.html",[3,0.467,4,0.396,9,0.396,14,0.977,19,0.546,20,1.078,25,1.078,26,3.081,29,0.845,35,1.245,36,1.628,38,1.078,39,0.057,40,0.804,41,1.174,42,1.078,44,1.28,45,1.245,50,1.245,51,1.245,52,2.643,60,1.005,61,0.396,69,0.467,70,0.467,71,1.707,121,0.031,122,0.031,150,1.963,155,3.285,157,1.333,158,1.333,171,1.477,178,0.688,179,0.977,185,1.984,187,1.438,189,0.732,191,0.977,192,1.135,195,1.28,203,1.333,204,3.497,205,2.793,206,3.497,207,2.353,208,4.112,209,3.857,210,2.946,211,2,212,3.497,213,2.946,214,2.946,215,2,216,2.946,217,3.081,218,2,219,2.946,220,2,221,2.946,222,2.946,223,2,224,2,225,1.333,226,2,227,2.353,228,1.963,229,1.598,230,1.333,231,1.598,232,2,233,2,234,2.946,235,2,236,2.946,237,2,238,2,239,2,240,2,241,2,242,2]],["title/components/HomeComponent.html",[0,0.723,115,0.839]],["body/components/HomeComponent.html",[0,1.18,1,1.09,2,2.204,3,0.695,4,0.589,5,1.984,6,1.984,7,1.984,8,1.984,9,0.589,11,1.984,12,3.167,13,2.696,15,2.588,17,2.588,39,0.055,40,1.06,60,0.695,61,0.589,69,0.695,70,0.695,108,1.454,109,2.588,110,2.588,111,1.984,112,3.053,113,1.984,114,1.984,115,1.452,116,1.984,117,0.943,118,1.689,119,1.984,120,1.984,121,0.041,122,0.041,174,3.053,243,2.378,244,4.323,245,3.884,246,3.884]],["title/interceptors/HttpRequestInterceptor.html",[247,2.115,248,1.502]],["body/interceptors/HttpRequestInterceptor.html",[3,0.675,4,0.572,9,0.572,19,0.789,25,1.395,36,1.059,38,1.059,39,0.056,40,0.789,41,0.789,42,1.059,44,1.059,60,0.996,61,0.572,69,0.89,70,0.675,84,1.861,121,0.04,122,0.04,150,1.927,152,1.64,161,1.927,171,1.222,178,0.89,185,2.418,191,1.412,195,1.059,248,2.418,249,2.892,250,1.927,251,3.811,252,3.811,253,4.531,254,4.262,255,4.531,256,2.892,257,3.811,258,2.892,259,3.811,260,3.044,261,2.31,262,2.892,263,2.892,264,2.892,265,2.31,266,2.31]],["title/components/LoginComponent.html",[0,0.723,117,0.839]],["body/components/LoginComponent.html",[0,0.994,1,0.431,2,1.104,3,0.275,4,0.233,5,0.785,6,0.785,7,0.785,8,0.785,9,0.233,11,0.785,12,2.128,13,1.812,15,1.296,17,1.296,19,0.322,20,0.712,25,0.712,29,0.822,33,2.425,34,1.777,35,1.453,36,1.444,38,0.712,39,0.057,40,0.788,41,0.994,42,0.712,44,0.712,45,0.822,48,1.985,50,1.453,51,1.35,52,1.812,55,1.637,60,0.804,61,0.233,65,0.668,69,0.275,70,0.275,71,1.858,84,1.213,108,0.575,109,1.296,110,1.296,111,0.785,112,1.923,113,0.785,114,0.785,115,0.373,116,0.785,117,0.914,118,1.41,119,0.785,120,0.785,121,0.02,122,0.02,148,0.785,171,0.498,174,1.296,187,1.409,189,1.056,195,0.712,217,3.151,230,2.708,267,0.941,268,1.178,269,2.886,270,3.44,271,2.886,272,1.945,273,1.945,274,1.945,275,1.945,276,1.945,277,2.886,278,1.945,279,1.945,280,1.945,281,1.945,282,1.945,283,2.886,284,1.945,285,1.945,286,2.485,287,1.945,288,3.44,289,1.985,290,3.195,291,1.945,292,2.485,293,2.485,294,1.945,295,2.886,296,1.178,297,2.065,298,3.64,299,1.945,300,1.945,301,1.178,302,1.945,303,1.178,304,1.178,305,1.178,306,1.945,307,1.178,308,1.178,309,1.178,310,1.178,311,1.178,312,1.178,313,1.178,314,1.178,315,1.178,316,1.178,317,1.178,318,1.178,319,1.945,320,1.178,321,1.178,322,1.178,323,1.178,324,1.178,325,1.178,326,1.178,327,1.178,328,1.178,329,1.178,330,1.178,331,1.178,332,1.178,333,1.178,334,1.178,335,1.178,336,1.178,337,1.178,338,1.178,339,1.178,340,1.945,341,1.178,342,1.178,343,2.485,344,1.178,345,2.886,346,2.886,347,0.941,348,3.64,349,2.485,350,1.178,351,3.195,352,2.886,353,1.178,354,1.178,355,1.178,356,2.485,357,2.485,358,1.178,359,1.178,360,1.178,361,1.945,362,1.178,363,1.178,364,1.178,365,0.941,366,1.945,367,1.945,368,1.945]],["title/injectables/StorageService.html",[178,0.618,297,1.502]],["body/injectables/StorageService.html",[3,0.596,4,0.505,9,0.505,14,1.246,19,0.697,25,1.283,29,1.69,36,1.652,38,0.934,39,0.056,40,0.697,41,0.697,42,0.934,44,1.577,45,1.819,55,1.448,60,0.596,61,0.505,69,0.596,70,0.596,84,1.246,121,0.037,122,0.037,171,1.69,178,0.818,179,1.246,187,1.711,192,1.448,195,1.577,207,3.941,289,3.44,297,1.988,369,1.701,370,4.306,371,4.306,372,3.504,373,2.552,374,2.552,375,2.552,376,2.552,377,3.504,378,2.552,379,3.724,380,1.701,381,2.039,382,2.552,383,2.552,384,2.552,385,2.552,386,3.504,387,2.552]],["title/coverage.html",[388,2.869]],["body/coverage.html",[0,1.145,1,1.026,9,0.554,10,2.238,34,1.368,35,1.183,39,0.055,41,0.765,115,0.887,117,0.887,121,0.039,122,0.039,152,1.589,167,1.866,169,1.866,178,1.045,180,2.238,189,1.026,197,1.866,198,2.238,199,2.238,203,2.486,225,1.866,228,1.866,243,2.238,247,2.238,248,1.589,250,2.486,267,2.238,297,1.589,369,2.486,380,1.866,388,2.238,389,2.801,390,2.801,391,2.801,392,5.189,393,2.801,394,4.891,395,2.801,396,2.801,397,2.238,398,4.792,399,2.238,400,2.801,401,3.731,402,2.801,403,2.801,404,2.238,405,2.801,406,2.801]],["title/dependencies.html",[126,1.803,407,1.48]],["body/dependencies.html",[39,0.056,61,0.646,63,2.339,64,2.61,65,1.854,67,2.177,121,0.043,122,0.043,126,1.854,128,2.177,141,2.747,142,2.339,148,2.177,157,2.177,158,2.177,191,1.595,408,3.267,409,4.098,410,3.267,411,3.267,412,3.267,413,3.267,414,4.123,415,3.267,416,3.267,417,3.267,418,3.267,419,3.267,420,3.267,421,3.267]],["title/index.html",[19,0.606,53,1.774,422,2.221]],["body/index.html",[0,1.13,4,0.539,39,0.038,40,0.744,63,2.756,82,1.546,121,0.038,122,0.038,189,0.998,261,2.177,347,2.177,407,1.816,409,2.177,423,2.725,424,3.663,425,2.725,426,4.138,427,4.138,428,2.177,429,2.725,430,3.663,431,4.617,432,2.725,433,2.725,434,2.725,435,2.725,436,2.725,437,2.725,438,2.725,439,2.725,440,2.725,441,2.725,442,2.725,443,4.138,444,4.138,445,2.725,446,4.425,447,2.725,448,2.725,449,2.725,450,2.725,451,3.663,452,3.663,453,4.425,454,2.725,455,3.663,456,3.663,457,2.725,458,4.754,459,2.725,460,2.725,461,2.725,462,3.663,463,2.725,464,2.725,465,2.725,466,2.725,467,2.725,468,2.725,469,4.138,470,2.725,471,2.725,472,1.816,473,2.725,474,2.725]],["title/modules.html",[125,1.754]],["body/modules.html",[39,0.049,121,0.049,122,0.049,124,2.246,125,1.933,135,1.933,142,2.246,365,3.162,475,3.959,476,4.633,477,3.959,478,3.959]],["title/overview.html",[472,2.393]],["body/overview.html",[1,1.852,2,1.831,27,2.151,39,0.053,82,1.831,108,1.576,115,1.423,117,1.423,121,0.043,122,0.043,123,1.831,124,2.972,125,1.576,126,1.831,127,2.579,128,2.151,129,2.579,130,2.151,131,2.579,132,2.579,133,2.579,134,2.579,135,2.193,136,3.268,166,1.831,179,1.576,472,2.151,479,3.228,480,4.092,481,3.228]],["title/properties.html",[20,1.164,407,1.48]],["body/properties.html",[20,1.493,39,0.052,121,0.05,122,0.05,428,3.258,482,4.079]],["title/routes.html",[166,2.038]],["body/routes.html",[39,0.05,121,0.05,122,0.05,166,2.35]],["title/miscellaneous/variables.html",[483,1.774,484,2.539]],["body/miscellaneous/variables.html",[19,0.68,33,1.659,35,1.455,39,0.057,41,1.295,50,1.955,51,1.955,52,1.412,55,2.24,84,1.928,121,0.036,122,0.036,152,1.954,161,1.659,167,2.295,169,2.295,171,1.668,189,0.911,195,1.56,203,1.659,205,1.988,225,2.295,227,1.988,228,2.295,229,1.988,230,1.659,231,1.988,248,1.412,250,1.659,260,1.988,265,1.988,266,1.988,369,1.659,379,1.988,380,2.295,381,1.988,397,1.988,399,1.988,404,1.988,483,1.988,484,1.988,485,2.489,486,2.489,487,2.489,488,2.489,489,2.489,490,2.489,491,3.444,492,3.444,493,3.444,494,3.444,495,2.489,496,3.444,497,3.444,498,2.489,499,2.489]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":482,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["11.0.2",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["16.1.0",{"_index":409,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["2",{"_index":479,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":480,"title":{},"body":{"overview.html":{}}}],["4",{"_index":481,"title":{},"body":{"overview.html":{}}}],["401",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{}}}],["404",{"_index":344,"title":{},"body":{"components/LoginComponent.html":{}}}],["5.2.0",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{}}}],["7.8.0",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["account",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{}}}],["actual_component",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["add",{"_index":465,"title":{},"body":{"index.html":{}}}],["again",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert(!this.jwthelper.istokenexpired(token",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular",{"_index":426,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{}}}],["angular/compiler",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["apiurl",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["app.component",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":436,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":135,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":34,"title":{"injectables/AppService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"components/LoginComponent.html":{},"coverage.html":{}}}],["appserviceservice",{"_index":197,"title":{"injectables/AppServiceService.html":{}},"body":{"injectables/AppServiceService.html":{},"coverage.html":{}}}],["artifacts",{"_index":447,"title":{},"body":{"index.html":{}}}],["auth",{"_index":381,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["auth0/angular",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["authguard",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authsecretkey",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":35,"title":{"injectables/AuthService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.isauthenticated",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice:authservice",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["authtoken",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":437,"title":{},"body":{"index.html":{}}}],["available",{"_index":478,"title":{},"body":{"modules.html":{}}}],["block",{"_index":273,"title":{},"body":{"components/LoginComponent.html":{}}}],["blocked",{"_index":279,"title":{},"body":{"components/LoginComponent.html":{}}}],["boolean",{"_index":187,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["bootstrap",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["break",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{}}}],["browse",{"_index":476,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["build",{"_index":446,"title":{},"body":{"index.html":{}}}],["canactivate:[authguard",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivate:[unauthguard",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":467,"title":{},"body":{"index.html":{}}}],["case",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{}}}],["change",{"_index":439,"title":{},"body":{"index.html":{}}}],["check",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["choice",{"_index":461,"title":{},"body":{"index.html":{}}}],["class",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["clean",{"_index":370,"title":{},"body":{"injectables/StorageService.html":{}}}],["cli",{"_index":427,"title":{},"body":{"index.html":{}}}],["close",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["cluster_appmodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":441,"title":{},"body":{"index.html":{}}}],["command",{"_index":462,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["components/home/home.component",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["console.log(\"this.loginform.getrawvalue",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(this.loginform.getrawvalue",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(authservice",{"_index":296,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(http",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(idle",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(private",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["contact",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{}}}],["content",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["countdown",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["coverage",{"_index":388,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["declarations",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["default_interruptsources",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["dependencies",{"_index":126,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":268,"title":{},"body":{"components/LoginComponent.html":{}}}],["dev",{"_index":433,"title":{},"body":{"index.html":{}}}],["development",{"_index":429,"title":{},"body":{"index.html":{}}}],["dimmed",{"_index":274,"title":{},"body":{"components/LoginComponent.html":{}}}],["directive",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["directives",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":445,"title":{},"body":{"index.html":{}}}],["directory",{"_index":450,"title":{},"body":{"index.html":{}}}],["displays",{"_index":269,"title":{},"body":{"components/LoginComponent.html":{}}}],["dist",{"_index":449,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["don't",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{}}}],["don’t",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{}}}],["dynamic",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":459,"title":{},"body":{"index.html":{}}}],["ecommerce",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["ecommercefrontend",{"_index":423,"title":{},"body":{"index.html":{}}}],["element",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["email",{"_index":288,"title":{},"body":{"components/LoginComponent.html":{}}}],["email,password",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{}}}],["email:string",{"_index":316,"title":{},"body":{"components/LoginComponent.html":{}}}],["emailaddress",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":458,"title":{},"body":{"index.html":{}}}],["environment",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{}}}],["example",{"_index":283,"title":{},"body":{"components/LoginComponent.html":{}}}],["execute",{"_index":455,"title":{},"body":{"index.html":{}}}],["export",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["exports",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{}}}],["failed",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["files",{"_index":440,"title":{},"body":{"index.html":{}}}],["first",{"_index":464,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{}}}],["formbuilder",{"_index":298,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol('admin123",{"_index":323,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol('admin@example.com",{"_index":321,"title":{},"body":{"components/LoginComponent.html":{}}}],["formcontrol,reactiveformsmodule",{"_index":310,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":306,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["further",{"_index":468,"title":{},"body":{"index.html":{}}}],["generate",{"_index":443,"title":{},"body":{"index.html":{}}}],["generated",{"_index":425,"title":{},"body":{"index.html":{}}}],["getting",{"_index":422,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":371,"title":{},"body":{"injectables/StorageService.html":{}}}],["getuserloggedin",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["go",{"_index":471,"title":{},"body":{"index.html":{}}}],["goes",{"_index":284,"title":{},"body":{"components/LoginComponent.html":{}}}],["gone",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":477,"title":{},"body":{"modules.html":{}}}],["guard/auth.guard",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard/unauth.guard",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["handleloginerror",{"_index":294,"title":{},"body":{"components/LoginComponent.html":{}}}],["handleloginerror(status",{"_index":300,"title":{},"body":{"components/LoginComponent.html":{}}}],["headers",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["help",{"_index":469,"title":{},"body":{"index.html":{}}}],["helpers/http.interceptor",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["here",{"_index":285,"title":{},"body":{"components/LoginComponent.html":{}}}],["home",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["home.component.css",{"_index":244,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":245,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":115,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["http://localhost:4200",{"_index":435,"title":{},"body":{"index.html":{}}}],["http://localhost:5005/api",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":260,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclient,public",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpclientmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":258,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["httphandler",{"_index":255,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["httpheaders",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":259,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HttpRequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httprequest",{"_index":253,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["httprequestinterceptor",{"_index":248,"title":{"interceptors/HttpRequestInterceptor.html":{}},"body":{"interceptors/HttpRequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["idle",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.onidleend.subscribe",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.onidlestart.subscribe",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.ontimeout.subscribe",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.ontimeoutwarning.subscribe((countdown",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.setidle(3600",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.setinterrupts(default_interruptsources",{"_index":75,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.settimeout(60",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.stop",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["idle.watch",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["idle/core",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["idle/keepalive",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["idlestate",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["implements",{"_index":261,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["inject(authservice",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":178,"title":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["injectables",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{},"overview.html":{}}}],["input",{"_index":278,"title":{},"body":{"components/LoginComponent.html":{}}}],["inside",{"_index":276,"title":{},"body":{"components/LoginComponent.html":{}}}],["interaction",{"_index":280,"title":{},"body":{"components/LoginComponent.html":{}}}],["intercept",{"_index":251,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["intercept(req",{"_index":252,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["interceptor",{"_index":247,"title":{"interceptors/HttpRequestInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":249,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["isauthenticated",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["isloggedin",{"_index":289,"title":{},"body":{"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["json.parse(user",{"_index":387,"title":{},"body":{"injectables/StorageService.html":{}}}],["json.stringify(user",{"_index":385,"title":{},"body":{"injectables/StorageService.html":{}}}],["jwt",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_options",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["jwthelper",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["jwtmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["karma",{"_index":457,"title":{},"body":{"index.html":{}}}],["keepalive",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["keepalive.interval(10",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["keepalive.onping.subscribe",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["later",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{}}}],["legend",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["loading",{"_index":270,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem(this.authsecretkey",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem(this.authsecretkey",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('authtoken",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{}}}],["log",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["login",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["login.component.css",{"_index":286,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":287,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":117,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logindata",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginerror",{"_index":290,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform",{"_index":291,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform:formgroup",{"_index":315,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginuser",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuser(emailaddress",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["longer",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["miscellaneous",{"_index":483,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["module",{"_index":123,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":125,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":470,"title":{},"body":{"index.html":{}}}],["multi",{"_index":266,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["navigate",{"_index":434,"title":{},"body":{"index.html":{}}}],["need",{"_index":463,"title":{},"body":{"index.html":{}}}],["new",{"_index":189,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":254,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["next.handle(req",{"_index":264,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["ng",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngidlekeepalivemodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["ngidlekeepalivemodule.forroot",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngx",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["number",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["object",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":185,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{}}}],["occurred",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["onsubmit",{"_index":295,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["out",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":272,"title":{},"body":{"components/LoginComponent.html":{}}}],["overlay",{"_index":275,"title":{},"body":{"components/LoginComponent.html":{}}}],["overview",{"_index":472,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":407,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":474,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["password",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["password).subscribe",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{}}}],["path",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["platform",{"_index":460,"title":{},"body":{"index.html":{}}}],["please",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{}}}],["private",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["production",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":424,"title":{},"body":{"index.html":{}}}],["projected",{"_index":277,"title":{},"body":{"components/LoginComponent.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"properties.html":{}}}],["provide",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"interceptors/HttpRequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["providers",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["reactiveformsmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["readonly",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirecting",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["redirectto",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":473,"title":{},"body":{"index.html":{}}}],["reload",{"_index":438,"title":{},"body":{"index.html":{}}}],["remember",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["req",{"_index":257,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["req.clone",{"_index":262,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["request",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.token",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{}}}],["results",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":195,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["returnurl",{"_index":292,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"injectables/StorageService.html":{}}}],["root'},{'name",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes),browsermodule",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":166,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":431,"title":{},"body":{"index.html":{}}}],["running",{"_index":451,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"dependencies.html":{}}}],["saveuser",{"_index":372,"title":{},"body":{"injectables/StorageService.html":{}}}],["saveuser(user",{"_index":377,"title":{},"body":{"injectables/StorageService.html":{}}}],["scaffolding",{"_index":442,"title":{},"body":{"index.html":{}}}],["seconds",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["serve",{"_index":432,"title":{},"body":{"index.html":{}}}],["server",{"_index":430,"title":{},"body":{"index.html":{}}}],["service.service.ts",{"_index":199,"title":{},"body":{"injectables/AppServiceService.html":{},"coverage.html":{}}}],["service.service.ts:15",{"_index":202,"title":{},"body":{"injectables/AppServiceService.html":{}}}],["service.service.ts:19",{"_index":201,"title":{},"body":{"injectables/AppServiceService.html":{}}}],["service.service.ts:9",{"_index":200,"title":{},"body":{"injectables/AppServiceService.html":{}}}],["services/app.service",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["services/auth.service",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["session",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["set",{"_index":281,"title":{},"body":{"components/LoginComponent.html":{}}}],["setuserloggedin",{"_index":182,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["setuserloggedin(userloggedin",{"_index":186,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["sign",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["signout",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["spinner",{"_index":271,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/.../auth.guard.ts",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.service.ts",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.interceptor.ts",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.service.ts",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../unauth.guard.ts",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:73",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/home/home.component.ts",{"_index":243,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":267,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":305,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:35",{"_index":304,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:36",{"_index":309,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:37",{"_index":308,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":307,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:39",{"_index":299,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:61",{"_index":303,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:82",{"_index":301,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/guard/auth.guard.ts",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guard/unauth.guard.ts",{"_index":399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/http.interceptor.ts",{"_index":250,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/http.interceptor.ts:7",{"_index":256,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["src/app/services/app",{"_index":198,"title":{},"body":{"injectables/AppServiceService.html":{},"coverage.html":{}}}],["src/app/services/app.service",{"_index":312,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/app.service.ts",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/services/app.service.ts:15",{"_index":188,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:19",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/app.service.ts:9",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/services/auth.service",{"_index":313,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/auth.service.ts:17",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:21",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:23",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:28",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:34",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/storage.service",{"_index":314,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/services/storage.service.ts",{"_index":369,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/storage.service.ts:12",{"_index":374,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:16",{"_index":378,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:21",{"_index":375,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:30",{"_index":376,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/services/storage.service.ts:8",{"_index":373,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/environments/environment",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/environments/environment.ts",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":53,"title":{"index.html":{}},"body":{"components/AppComponent.html":{}}}],["state",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":302,"title":{},"body":{"components/LoginComponent.html":{}}}],["stay",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["storageservice",{"_index":297,"title":{"injectables/StorageService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["stored",{"_index":448,"title":{},"body":{"index.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["subject",{"_index":190,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["submitted",{"_index":293,"title":{},"body":{"components/LoginComponent.html":{}}}],["support",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{},"modules.html":{}}}],["svg",{"_index":475,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{}}}],["table",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["test",{"_index":454,"title":{},"body":{"index.html":{}}}],["testing",{"_index":466,"title":{},"body":{"index.html":{}}}],["tests",{"_index":453,"title":{},"body":{"index.html":{}}}],["this.appservice.getuserloggedin().subscribe((userloggedin",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.setuserloggedin(false",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appservice.setuserloggedin(true",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isauthenticated",{"_index":317,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginuser(email",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":101,"title":{},"body":{"components/AppComponent.html":{}}}],["this.countdown",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.formbuilder.group",{"_index":320,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handleloginerror(error.status",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.http.post(`${this.apiurl}/login",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post(this.apiurl",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.idle.watch",{"_index":99,"title":{},"body":{"components/AppComponent.html":{}}}],["this.idlestate",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["this.jwthelper.istokenexpired(token",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginerror",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform",{"_index":319,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.getrawvalue",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["this.reset",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":318,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([this.returnurl",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.submitted",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.timedout",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userloggedin.asobservable",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["this.userloggedin.next(false",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["this.userloggedin.next(userloggedin",{"_index":194,"title":{},"body":{"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["time",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["timed",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["timedout",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["true",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{}}}],["tslib",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"interceptors/HttpRequestInterceptor.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthguard",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unexpected",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["unit",{"_index":452,"title":{},"body":{"index.html":{}}}],["up",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{}}}],["usage",{"_index":282,"title":{},"body":{"components/LoginComponent.html":{}}}],["use",{"_index":444,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":265,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":379,"title":{},"body":{"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_key",{"_index":380,"title":{},"body":{"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloggedin",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{}}}],["usevalue",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["validators",{"_index":311,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":324,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required,validators.email",{"_index":322,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":484,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{}}}],["version",{"_index":428,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":456,"title":{},"body":{"index.html":{}}}],["void",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AppServiceService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"injectables/StorageService.html":{}}}],["window.sessionstorage.clear",{"_index":382,"title":{},"body":{"injectables/StorageService.html":{}}}],["window.sessionstorage.getitem(user_key",{"_index":386,"title":{},"body":{"injectables/StorageService.html":{}}}],["window.sessionstorage.removeitem(user_key",{"_index":383,"title":{},"body":{"injectables/StorageService.html":{}}}],["window.sessionstorage.setitem(user_key",{"_index":384,"title":{},"body":{"injectables/StorageService.html":{}}}],["withcredentials",{"_index":263,"title":{},"body":{"interceptors/HttpRequestInterceptor.html":{}}}],["works",{"_index":246,"title":{},"body":{"components/HomeComponent.html":{}}}],["you\\'ve",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.js",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countdown\n                            \n                            \n                                idleState\n                            \n                            \n                                timedOut\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                reset\n                            \n                            \n                                stay\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(idle: Idle, keepalive: Keepalive, router: Router, appService: AppService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        idle\n                                                  \n                                                        \n                                                                    Idle\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        keepalive\n                                                  \n                                                        \n                                                                    Keepalive\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stay\n                        \n                    \n                \n            \n            \n                \nstay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countdown\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idleState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Not started.'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timedOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ecommerce-frontend'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { Keepalive } from '@ng-idle/keepalive';\nimport { AppService } from './services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ecommerce-frontend';\n  idleState = 'Not started.';\n  timedOut = false;\n  countdown: number | null = null;\n\n  constructor(\n    private idle: Idle,\n    keepalive: Keepalive,\n    private router: Router,\n    private appService: AppService,\n    private authService:AuthService\n  ) {\n    idle.setIdle(3600 );\n    idle.setTimeout(60);\n    idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n    idle.onIdleEnd.subscribe(() => {\n      this.idleState = 'No longer idle.'\n      this.reset();\n    });\n\n    idle.onTimeout.subscribe(() => {\n      this.idleState = 'Timed out!';\n      this.timedOut = true;\n     this.logout()\n    });\n\n    idle.onIdleStart.subscribe(() => {\n      this.idleState = 'You\\'ve gone idle!'\n    });\n\n    idle.onTimeoutWarning.subscribe((countdown) => {\n      this.idleState = 'You will time out in ' + countdown + ' seconds!';\n      this.countdown = countdown;\n    });\n\n    keepalive.interval(10);\n    keepalive.onPing.subscribe(() => {});\n\n    this.appService.getUserLoggedIn().subscribe((userLoggedIn: any) => {\n      if (userLoggedIn) {\n        idle.watch()\n        this.timedOut = false;\n      } else {\n        idle.stop();\n      }\n    })\n  }\n\n  reset() {\n    this.idle.watch();\n    this.timedOut = false;\n    this.countdown = null;\n  }\n\n  stay() {\n    this.reset();\n  }\n\n  logout() {\n    this.countdown = null;\n    this.appService.setUserLoggedIn(false);\n    this.authService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n\n    \n\n    \n        \n\n  You will time out in {{ countdown }} seconds!\n\n\n  Session timed out! Redirecting...\n\n\n\n  \n    \n    \n      \n        \n          \n        \n        Close modal\n      \n      \n        \n        \n        \n          \n        \n      \n      \n        \n       -->\n      You will time out in {{ countdown }} seconds!\n      \n        \n          Stay\n        \n        \n          Log Out\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  You will time out in {{ countdown }} seconds!  Session timed out! Redirecting...                                                  Close modal                                                                                 -->      You will time out in {{ countdown }} seconds!                        Stay                          Log Out                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './components/home/home.component';\nimport { httpInterceptorProviders } from './helpers/http.interceptor';\nimport { JWT_OPTIONS, JwtHelperService, JwtModule } from '@auth0/angular-jwt';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgIdleKeepaliveModule.forRoot(),\n       ReactiveFormsModule,\n  ],\n  providers: [httpInterceptorProviders,{ provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\n        JwtHelperService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { unauthGuard } from './guard/unauth.guard';\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate:[unauthGuard]\n  },\n    {\n    path: 'home',\n    component: HomeComponent,\n    canActivate:[AuthGuard]\n  },\n\n    { path: '**', redirectTo: '/login'},\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes),BrowserModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserLoggedIn\n                            \n                            \n                                setUserLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserLoggedIn\n                        \n                    \n                \n            \n            \n                \ngetUserLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/app.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserLoggedIn\n                        \n                    \n                \n            \n            \n                \nsetUserLoggedIn(userLoggedIn: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/app.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoggedIn\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  private userLoggedIn = new Subject();\n\n  constructor() {\n    this.userLoggedIn.next(false);\n  }\n\n  setUserLoggedIn(userLoggedIn: boolean) {\n    this.userLoggedIn.next(userLoggedIn);\n  }\n\n  getUserLoggedIn(): Observable {\n    return this.userLoggedIn.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppServiceService.html":{"url":"injectables/AppServiceService.html","title":"injectable - AppServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userLoggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserLoggedIn\n                            \n                            \n                                setUserLoggedIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-service.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserLoggedIn\n                        \n                    \n                \n            \n            \n                \ngetUserLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/app-service.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserLoggedIn\n                        \n                    \n                \n            \n            \n                \nsetUserLoggedIn(userLoggedIn: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/app-service.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userLoggedIn\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-service.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppServiceService {\n\n  private userLoggedIn = new Subject();\n\n  constructor() {\n    this.userLoggedIn.next(false);\n  }\n\n  setUserLoggedIn(userLoggedIn: boolean) {\n    this.userLoggedIn.next(userLoggedIn);\n  }\n\n  getUserLoggedIn(): Observable {\n    return this.userLoggedIn.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                apiUrl\n                            \n                            \n                                    Private\n                                authSecretKey\n                            \n                            \n                                    Public\n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                loginUser\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, jwtHelper: JwtHelperService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtHelper\n                                                  \n                                                        \n                                                                    JwtHelperService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \nisAuthenticated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(emailAddress: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                emailAddress\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authToken'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jwtHelper\n                        \n                    \n                \n            \n                \n                    \n                        Type :     JwtHelperService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable, from } from 'rxjs';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n const httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  private authSecretKey = 'authToken';\n  readonly apiUrl: string = environment.apiUrl;\n\n\n  constructor(private http: HttpClient,public jwtHelper: JwtHelperService) { }\n\n   loginUser(emailAddress: string, password: string): Observable {\n    const loginData = { emailAddress, password };\n\n    return this.http.post(`${this.apiUrl}/login`, loginData);\n  }\n   isAuthenticated(): boolean {\n    const token = localStorage.getItem(this.authSecretKey);\n    // return !!token;\n    // alert(!this.jwtHelper.isTokenExpired(token))\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n   logout(): void {\n    this.http.post(this.apiUrl + 'signout', { }, httpOptions);\n    localStorage.removeItem(this.authSecretKey);\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HttpRequestInterceptor.html":{"url":"interceptors/HttpRequestInterceptor.html","title":"interceptor - HttpRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HttpRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/http.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/helpers/http.interceptor.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    req = req.clone({\n      withCredentials: true,\n    });\n\n    return next.handle(req);\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component displays a loading spinner over a block of content,\nin a dimmed overlay. Content inside the component is projected,\nand a boolean Input loading displays the spinner at will.\nProjected content is blocked from interaction when loading\nis set to true\nUsage example:\nExample :\n  \n     Content goes here\n  \n  \n    Get new content\n  \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                loginError\n                            \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleLoginError\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, appService: AppService, storageService: StorageService, router: Router, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleLoginError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLoginError(status: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/home'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormControl,ReactiveFormsModule, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AppService } from 'src/app/services/app.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { StorageService } from 'src/app/services/storage.service';\n\n/**\n * This component displays a loading spinner over a block of content,\n * in a dimmed overlay. Content inside the component is projected,\n * and a boolean Input `loading` displays the spinner at will.\n * Projected content is blocked from interaction when `loading`\n * is set to `true`\n *\n * Usage example:\n * @example\n * \n *   \n *      Content goes here\n *   \n *   \n *     Get new content\n *   \n * \n*/\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n loginError: string = '';\n  isLoggedIn: boolean = false;\n  submitted = false;\n  returnUrl: string = '/home';\n  loginForm:FormGroup ;\n  email:String =''\n\n  constructor(\n    private authService: AuthService,\n    private appService: AppService,\n    private storageService: StorageService,\n    private router: Router,\n    private formBuilder: FormBuilder\n  ) {\n    if (this.authService.isAuthenticated()) {\n      this.router.navigate(['/']);\n    }\n    this.loginForm =this.loginForm = this.formBuilder.group({\n      email: new FormControl('admin@example.com',[ Validators.required,Validators.email]),\n      password: new FormControl('admin123', Validators.required),\n    });\n\n  }\n\n//   get f() {\n//   return this.loginForm.controls;\n// }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    console.log(\"this.loginForm.getRawValue()\")\n    console.log(this.loginForm.getRawValue())\n    const {email,password}= this.loginForm.getRawValue();\n\n    this.authService.loginUser(email, password).subscribe(\n      (response) => {\n        localStorage.setItem('authToken', response.token);\n        this.appService.setUserLoggedIn(true);\n        this.router.navigate([this.returnUrl]);\n      },\n      (error) => {\n        this.handleLoginError(error.status);\n      }\n    );\n  }\n\n  private handleLoginError(status: number) {\n    switch (status) {\n      case 404:\n        this.loginError = \"Please check your email or sign up if you don't have an account.\";\n        break;\n      case 401:\n        this.loginError = \"Incorrect password. Please verify your password and try again.\";\n        break;\n      case 500:\n        this.loginError = \"Request failed. Please try again later.\";\n        break;\n      default:\n        this.loginError = \"An unexpected error occurred. Please try again later or contact support.\";\n        break;\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n\n        \n        \n\n      \n\n      \n        \n          \n            \n              Sign in to your account\n            \n            \n              \n                Your\n                  email\n                \n              \n              \n                Password\n                \n              \n              \n                \n\n                  \n                    Do not remember\n                      your\n                      password\n                  \n                \n                Forgot\n                  password?\n              \n              Sign\n                in\n\n              {{ loginError }}\n              \n\n              \n                Don’t have an account yet? Sign\n                  up\n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Sign in to your account                                                      Your                  email                                                            Password                                                                                                  Do not remember                      your                      password                                                  Forgot                  password?                            Sign                in              {{ loginError }}                                            Don’t have an account yet? Sign                  up                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/storage.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    isLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUser(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  clean(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return {};\n  }\n\n  public isLoggedIn(): boolean {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/guard/auth.guard.ts\n            \n            variable\n            AuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guard/unauth.guard.ts\n            \n            variable\n            unauthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/helpers/http.interceptor.ts\n            \n            interceptor\n            HttpRequestInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/helpers/http.interceptor.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/app-service.service.ts\n            \n            injectable\n            AppServiceService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/storage.service.ts\n            \n            variable\n            USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.1.0\n        \n            @angular/common : ^16.1.0\n        \n            @angular/compiler : ^16.1.0\n        \n            @angular/core : ^16.1.0\n        \n            @angular/forms : ^16.1.0\n        \n            @angular/platform-browser : ^16.1.0\n        \n            @angular/platform-browser-dynamic : ^16.1.0\n        \n            @angular/router : ^16.1.0\n        \n            @auth0/angular-jwt : ^5.2.0\n        \n            @ng-idle/core : ^14.0.0\n        \n            @ng-idle/keepalive : ^14.0.0\n        \n            ngx-bootstrap : ^11.0.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEcommerceFrontend\nThis project was generated with Angular CLI version 16.1.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Components\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../http.interceptor.ts)\n                        \n                        \n                            httpOptions   (src/.../auth.service.ts)\n                        \n                        \n                            unauthGuard   (src/.../unauth.guard.ts)\n                        \n                        \n                            USER_KEY   (src/.../storage.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/guard/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  if (authService.isAuthenticated()) {\n    return true;\n  } else {\n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:5005/api',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/helpers/http.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpInterceptorProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/services/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                    \n                \n\n\n        \n    \n\n    src/app/guard/unauth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        unauthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n   const authService = inject(AuthService);\n\n  if (authService.isAuthenticated()) {\n\n    return false;\n  } else {\n    return true;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/services/storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-user'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
